BACKGROUND (from jason):
Here are some background papers on the mouse ENCODE data:
http://www.nature.com/nature/journal/v488/n7409/full/nature11243.html
http://genomebiology.com/2012/13/8/418

I also had an idea for an alternative project associated with DNase Footprints that we could also discuss. Here are some papers for background on that:
http://www.nature.com/nature/journal/v489/n7414/full/nature11212.html
http://psb.stanford.edu/psb-online/proceedings/psb13/luo.pdf
http://genome.cshlp.org/content/21/3/447.full.html
http://genome.cshlp.org/content/21/3/456.full
http://www.nature.com/nmeth/journal/v6/n4/abs/nmeth.1313.html
http://bioinformatics.oxfordjournals.org/content/26/12/i334.full

------------------------------------------------------------------------------------------------

DATA FILE(from jason):
The footprints can be found here
ftp://ftp.ebi.ac.uk/pub/databases/ensembl/encode/supplementary/integration_data_jan2011/byDataType/footprints/jan2011/

The signal data can be found here
http://hgdownload.cse.ucsc.edu/goldenPath/hg19/encodeDCC/wgEncodeUwDgf/*.bigWig
http://genome.ucsc.edu/cgi-bin/hgFileUi?db=hg19&g=wgEncodeUwDgf
you will want the bigWig files.

You can convert them over of there binary representation using bigWigToWig:
http://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64/bigWigToWig

BED format
NOTE: the start is 0-based while the end is 1-based. So if we have chrStart=0, chrEne=100, the interval is actually 0-99
http://genome.ucsc.edu/FAQ/FAQformat.html#format1

fixedstep format
http://genome.ucsc.edu/goldenPath/help/wiggle.html

conservation energy data:
http://hgdownload.cse.ucsc.edu/goldenPath/hg19/phyloP46way/placentalMammals/

Motif Instances (not based on conservation energy)
http://www.broadinstitute.org/~pouyak/motif-disc/human/data/optmm/8mer/268435455/matches/0.0.gz
described from here:
http://www.broadinstitute.org/~pouyak/motif-disc/human/


------------------------------------------------------------------------------------------------
45096726 Footprint sequences (45 million)

To quantify this, we applied a simple footprint occupancy score (FOS) such that
FOS = (C + 1)/L + (C + 1)/R where C represents the average number of tags in the central
component, L is the average number of tags in the left flanking component, R is the
average number of tags in the right flanking component, and a smaller FOS value
indicates greater average contrast levels between the central component and its flanking
regions.

------------------------------------------------------------------------------------------------
split_fp_data.sh: split the footprints file to one for each chromosome
FOOTPRINT FILE FORMAT:
chromosome start end cell_type footprint_occupancy_score

clusters2plot.sh: convert cluster results to gnuplot readabl
e format and create the plot

Split result for gnu_plot: 
  awk 'NR%3==1{x="F"++i;}{print > x}{close (x)}'  file3
plot_script: plot the result in to ps file using gnu_plot

split the dataCluster point results into each cluster files: (t = file Name)
csplit -ks -f part. t '/^\[START\] Centroid : [0-9]*[0-9]$/' {100000}

Notable Paper:
1) Global Mapping of protein-DNA interactiosn in vivo by digital genomic footprints
An expansvie humanregulatory lexicon encoded in transcription factor footprints
2) Time series paper by Jason Ernst

-------------------------------------------------------------------------------------------------
to compile the cluster-cor.cpp (using threads)
g++ cluster-cor.cpp -std=c++0x -pthread

-------------------------------------------------------------------------------------------------
login to hoffman2
ssh -l spchuang hoffman2.idre.ucla.edu
pass: BqHg2Kxm

scp [source file] [user name]@[host]:[destination]

sending jobs to the cluster
job.q -t 23 -d 4000 -n 1 progname.sh

Here -t is the number of hours you request (23), -d is the amount of memory in MB (4 GB here), and -n is the number of CPU's (1). Just put all the things you want to run in a shell script called progname.sh (or pick a better name :). Once you submit it you can check the status with qstat | grep "your-user-name"

documentations: http://ccn.ucla.edu/wiki/index.php/Hoffman2:Submitting_Jobs


using "screen" to leave process running even after ssh logout
1)ssh into your remote box. type screen Then start the process you want.
2)Press Ctrl-A then Ctrl-D. This will "detach" your screen session but leave your processes running. You can now log out of the remote box.
3)If you want to come back later, log on again and type "screen -r" This will "resume" your screen session, and you can see the output of your process.

note: tmux is also an alternative solution
-------------------------------------------------------------------------------------------------
(footprints: 41 cell types): 
(if yes means we have signals data for this cell type)
AG10803 (yes)
AoAF  (yeS)
CD20+ (yes)
CD34+ mobilized (no)
fBrain (no)
fHeart (no)
fLung (no)
GM06990* (yes)
GM12865  (yes)
HAEpiC   (yes, Hae)
HA-h  (yes, Hah)
HCF (yes, Hcf)
HCM (yes, Hcm)
HCPEpiC (yes, Hcpe)
HEEpiC (yes, Hee)
HepG2* (yes, Hepg2)
H7-hESC (yes, H7es)
HFF (yes, Hff)
HIPEpiC (yes, Hipe)
HMF (yes, Hmf)
HMVEC-dBl-Ad (yes, Hmvecdblad)
HMVEC-dBl-Neo (no)
HMVEC-dLy-Neo (no)
HMVEC-LLy (no)
HPAF  (yes, Hpaf)
HPdLF (yes, Hpdlf)
HPF (yes, Hpf)
HRCEpiC (yes, Hrce)
HSMM (yes, Hsmm)
Th1* (yes, Th1)
HVMF (yes, Hvmf)
IMR90 (no)
K562* (yes, K562)
NB4 (yes, Nb4)
NH-A (yes, Nha)
NHDFadult (yes, Nhdfad)
NHDF-neo (yes, Nhdfneo)
NHLF (yes, Nhlf)
SAEC (yes, Saec)
SKMC (yes, Skmc)
SK-N-SH RA* (SK-N-SH_RA) (yes, Sknshra)


(signals: 55 cell types)
Cell type research:
(signal file name) -> name in footprints
K562Sig   ->  K562
HepG2Sig  ->  HepG2
HCFSIG    ->  HCF
NB4SIG    ->  NB4
AoAFSIF   ->  AoAF
HPFSIG    ->  HPF
HPAFSIG   ->  HPAF

HCMSIG    ->  HCM
Th1SIG    ->  Th1
NHASIG    ->  NH-A



